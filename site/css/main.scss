@use "sass:color";

@import "libs/vars";
@import "libs/functions";
@import "libs/mixins";
@import "libs/vendor";
@import "libs/breakpoints";

@import "fontawesome-all.min.css";
@import url("https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=Aboreto&family=Prata&display=fallback");

// Breakpoints.

@include breakpoints(
  (
    xlarge: (
      1281px,
      1680px,
    ),
    large: (
      981px,
      1280px,
    ),
    medium: (
      737px,
      980px,
    ),
    small: (
      481px,
      736px,
    ),
    xsmall: (
      361px,
      480px,
    ),
    xxsmall: (
      null,
      360px,
    ),
    xlarge-to-max: "(min-width: 1681px)",
    small-to-xlarge: "(min-width: 481px) and (max-width: 1680px)",
  )
);

// Base.

@import "base/reset";
@import "base/page";
@import "base/typography";

// Layout.

@import "layout/main";
@import "layout/sidebar";
@import "layout/header";

$default-margin: 25px;

:root {
  --ButtonBlue: #{_palette(accent)};
  --ButtonWhite: #{_palette(bg)};
  --ButtonDisabled: #{_palette(fg-light)};
}

body {
  height: 100%;
  position: relative;

  // This allows us to set the opacity of the background image
  &:before {
    content: " ";
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0.2;
    background-image: url("../assets/marble.jpg");
  }
}

.center-content {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}

h1 {
  font-family: "Aboreto", cursive;
  margin-bottom: 0;
  font-size: xx-large;
}

h2 {
  font-family: "Prata", serif;
  margin-top: 0;
  font-size: large;
}

h2.cinzel {
  font-family: "Aboreto", cursive;
  font-size: xx-large;
}

#wrapper {
  position: relative;
  min-height: 100vh;
  display: grid;
  grid-template:
    "sidebar space-left col-left header col-right space-right" auto
    "sidebar space-left col-left content col-right space-right" 1fr
    "sidebar space-left col-left footer col-right space-right" auto /
    auto 1fr auto auto auto 1fr;

  $fade-width: 100px;
  $fade-width2: 5px;
  $left-fade: 150px;
  $right-fade: 1500px;
  $fade-mid: color.mix(_palette(accent), _palette(bg));

  // background-image: linear-gradient(
  //   to right,
  //   _palette(accent) $left-fade,
  //   $fade-mid ($left-fade + $fade-width2),
  //   _palette(bg) ($left-fade + $fade-width),
  //   _palette(bg) ($right-fade - $fade-width),
  //   $fade-mid ($right-fade - $fade-width2),
  //   _palette(accent) $right-fade
  // );

  @include breakpoint(">=medium") {
    #space-left {
      grid-area: space-left;
      background-image: linear-gradient(to right, _palette(accent-bold), 40%, transparentize(_palette(bg), 1));
      min-width: 3em;
    }

    #space-right {
      grid-area: space-right;
      background-image: linear-gradient(to left, _palette(accent-bold), 40%, transparentize(_palette(bg), 1));
      min-width: 3em;
    }
  }
}

#header {
  grid-area: header;
}

#content {
  grid-area: content;

  @include breakpoint(">=large") {
    margin-left: auto;
    margin-right: auto;
    max-width: 50em;
  }

  @include breakpoint("<large") {
    margin-left: 2em;
    margin-right: 2em;
  }
}

#footer {
  grid-area: footer;
  margin-bottom: $default-margin * 2;
}

.col-group {
  display: flex;
  flex-direction: column;
  margin: $default-margin;
  min-width: 10em;

  .top {
    background-image: url(../assets/col2_top.png);
    background-repeat: no-repeat;
    background-size: 10em;
    height: 10em;
  }

  .mid {
    background-image: url(../assets/col2_mid.png);
    background-repeat: repeat-y;
    background-size: 10em;
    flex-grow: 1;
  }

  .bot {
    background-image: url(../assets/col2_bot.png);
    background-repeat: no-repeat;
    background-size: 10em;
    height: 10em;
  }

  &#col-left {
    grid-area: col-left;
  }

  &#col-right {
    grid-area: col-right;
  }

  @include breakpoint("<medium") {
    /* Remove columns */
    display: none;
  }
}

.puzzle-group {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  align-content: space-between;
  justify-content: space-evenly;
  row-gap: 10px;

  padding: 20px;
}

.puzzle-item {
  display: table;
  width: 150px;
  height: 200px;
  border: 2px solid black;
  background: _palette(bg);
  text-align: center;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.2);
  transition: 0.3s;
  border-radius: 5px;
  padding: 10px;
  margin: 2px;

  &:hover {
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.2);
  }

  // @include breakpoint("<=small") {
  //   & {
  //     width: 100px;
  //     height: 133px;
  //   }
  // }
}

.puzzle-icon img {
  /* width: 100%; */
  /* height: 40px; */
  display: table-row;
  width: 100%;
  border-bottom: 2px solid black;
  /* height: 100px; */

  /* display: table-header-group; */

  /* height:0; */
}

.puzzle-title {
  text-transform: uppercase;
  font-size: large;
}

.puzzle-status {
  input {
    appearance: auto;
  }
  accent-color: _palette(accent);

  display: flex;
  justify-content: center; /* align horizontal */
  align-items: center; /* align vertical */

  -ms-transform: scale(2); /* IE */
  -moz-transform: scale(2); /* FF */
  -webkit-transform: scale(2); /* Safari and Chrome */
  -o-transform: scale(2); /* Opera */
  transform: scale(2);
  padding: 10px;
}

.btn {
  background-color: var(--ButtonWhite);
  color: var(--ButtonBlue);
  border: 2px solid var(--ButtonBlue);
  border-radius: 5px;

  padding: 15px 32px;

  text-align: center;
  text-decoration: none;
  margin-left: 10px;
  margin-right: 10px;

  :hover :not(.btn-disabled) {
    filter: brightness(120%);
    cursor: pointer;
  }
}

.btn-primary {
  background-color: var(--ButtonBlue);
  color: var(--ButtonWhite);
}

.btn-disabled {
  border-color: var(--ButtonDisabled);
  background-color: var(--ButtonWhite);
  color: var(--ButtonDisabled);
}

.btn-group {
  margin-top: 30px;
  margin-bottom: 30px;
  display: flex;
  justify-content: center;
}
